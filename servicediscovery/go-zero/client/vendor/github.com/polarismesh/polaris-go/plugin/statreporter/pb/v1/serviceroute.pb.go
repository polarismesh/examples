// Code generated by protoc-gen-go. DO NOT EDIT.
// source: serviceroute.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 规则类型，现在就规则路由要区分主调规则还是被调规则
type RouteRecord_RuleType int32

const (
	RouteRecord_Unknown  RouteRecord_RuleType = 0
	RouteRecord_DestRule RouteRecord_RuleType = 1
	RouteRecord_SrcRule  RouteRecord_RuleType = 2
)

var RouteRecord_RuleType_name = map[int32]string{
	0: "Unknown",
	1: "DestRule",
	2: "SrcRule",
}

var RouteRecord_RuleType_value = map[string]int32{
	"Unknown":  0,
	"DestRule": 1,
	"SrcRule":  2,
}

func (x RouteRecord_RuleType) String() string {
	return proto.EnumName(RouteRecord_RuleType_name, int32(x))
}

func (RouteRecord_RuleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b4d8730375bccbc6, []int{1, 0}
}

//路由调用结果
type RouteResult struct {
	//返回码
	RetCode string `protobuf:"bytes,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	//一个周期内的这种返回码的调用次数
	PeriodTimes uint32 `protobuf:"varint,2,opt,name=period_times,json=periodTimes,proto3" json:"period_times,omitempty"`
	//路由状态，如是否发生了就近降级，是否是全活状态
	RouteStatus string `protobuf:"bytes,3,opt,name=route_status,json=routeStatus,proto3" json:"route_status,omitempty"`
	//路由返回的cluster结果
	Cluster              string   `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteResult) Reset()         { *m = RouteResult{} }
func (m *RouteResult) String() string { return proto.CompactTextString(m) }
func (*RouteResult) ProtoMessage()    {}
func (*RouteResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4d8730375bccbc6, []int{0}
}

func (m *RouteResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteResult.Unmarshal(m, b)
}
func (m *RouteResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteResult.Marshal(b, m, deterministic)
}
func (m *RouteResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteResult.Merge(m, src)
}
func (m *RouteResult) XXX_Size() int {
	return xxx_messageInfo_RouteResult.Size(m)
}
func (m *RouteResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteResult.DiscardUnknown(m)
}

var xxx_messageInfo_RouteResult proto.InternalMessageInfo

func (m *RouteResult) GetRetCode() string {
	if m != nil {
		return m.RetCode
	}
	return ""
}

func (m *RouteResult) GetPeriodTimes() uint32 {
	if m != nil {
		return m.PeriodTimes
	}
	return 0
}

func (m *RouteResult) GetRouteStatus() string {
	if m != nil {
		return m.RouteStatus
	}
	return ""
}

func (m *RouteResult) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

//路由规则调用记录
type RouteRecord struct {
	//使用这个规则的插件名字
	PluginName string `protobuf:"bytes,1,opt,name=plugin_name,json=pluginName,proto3" json:"plugin_name,omitempty"`
	//各种不同返回码的结果
	Results []*RouteResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	//主调服务命名空间
	SrcNamespace string `protobuf:"bytes,3,opt,name=src_namespace,json=srcNamespace,proto3" json:"src_namespace,omitempty"`
	//主调服务名
	SrcService           string               `protobuf:"bytes,4,opt,name=src_service,json=srcService,proto3" json:"src_service,omitempty"`
	RuleType             RouteRecord_RuleType `protobuf:"varint,5,opt,name=rule_type,json=ruleType,proto3,enum=v1.RouteRecord_RuleType" json:"rule_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RouteRecord) Reset()         { *m = RouteRecord{} }
func (m *RouteRecord) String() string { return proto.CompactTextString(m) }
func (*RouteRecord) ProtoMessage()    {}
func (*RouteRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4d8730375bccbc6, []int{1}
}

func (m *RouteRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteRecord.Unmarshal(m, b)
}
func (m *RouteRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteRecord.Marshal(b, m, deterministic)
}
func (m *RouteRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteRecord.Merge(m, src)
}
func (m *RouteRecord) XXX_Size() int {
	return xxx_messageInfo_RouteRecord.Size(m)
}
func (m *RouteRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteRecord.DiscardUnknown(m)
}

var xxx_messageInfo_RouteRecord proto.InternalMessageInfo

func (m *RouteRecord) GetPluginName() string {
	if m != nil {
		return m.PluginName
	}
	return ""
}

func (m *RouteRecord) GetResults() []*RouteResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *RouteRecord) GetSrcNamespace() string {
	if m != nil {
		return m.SrcNamespace
	}
	return ""
}

func (m *RouteRecord) GetSrcService() string {
	if m != nil {
		return m.SrcService
	}
	return ""
}

func (m *RouteRecord) GetRuleType() RouteRecord_RuleType {
	if m != nil {
		return m.RuleType
	}
	return RouteRecord_Unknown
}

//一个服务不同类型路由规则调用记录
type ServiceRouteRecord struct {
	//该条记录的唯一id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//sdk标识
	SdkToken *SDKToken `protobuf:"bytes,2,opt,name=sdk_token,json=sdkToken,proto3" json:"sdk_token,omitempty"`
	//命名空间
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	//服务名
	Service string `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	//上报的时间
	Time *timestamp.Timestamp `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	//路由规则调用记录
	Records              []*RouteRecord `protobuf:"bytes,6,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ServiceRouteRecord) Reset()         { *m = ServiceRouteRecord{} }
func (m *ServiceRouteRecord) String() string { return proto.CompactTextString(m) }
func (*ServiceRouteRecord) ProtoMessage()    {}
func (*ServiceRouteRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4d8730375bccbc6, []int{2}
}

func (m *ServiceRouteRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceRouteRecord.Unmarshal(m, b)
}
func (m *ServiceRouteRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceRouteRecord.Marshal(b, m, deterministic)
}
func (m *ServiceRouteRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceRouteRecord.Merge(m, src)
}
func (m *ServiceRouteRecord) XXX_Size() int {
	return xxx_messageInfo_ServiceRouteRecord.Size(m)
}
func (m *ServiceRouteRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceRouteRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceRouteRecord proto.InternalMessageInfo

func (m *ServiceRouteRecord) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServiceRouteRecord) GetSdkToken() *SDKToken {
	if m != nil {
		return m.SdkToken
	}
	return nil
}

func (m *ServiceRouteRecord) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ServiceRouteRecord) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ServiceRouteRecord) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *ServiceRouteRecord) GetRecords() []*RouteRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

func init() {
	proto.RegisterEnum("v1.RouteRecord_RuleType", RouteRecord_RuleType_name, RouteRecord_RuleType_value)
	proto.RegisterType((*RouteResult)(nil), "v1.RouteResult")
	proto.RegisterType((*RouteRecord)(nil), "v1.RouteRecord")
	proto.RegisterType((*ServiceRouteRecord)(nil), "v1.ServiceRouteRecord")
}

func init() { proto.RegisterFile("serviceroute.proto", fileDescriptor_b4d8730375bccbc6) }

var fileDescriptor_b4d8730375bccbc6 = []byte{
	// 427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xcf, 0x6e, 0x13, 0x31,
	0x10, 0xc6, 0xd9, 0x6d, 0x69, 0x36, 0xb3, 0x69, 0xa8, 0x7c, 0x5a, 0x22, 0xa4, 0x86, 0x70, 0x49,
	0x2f, 0xae, 0xba, 0x88, 0x27, 0xa0, 0x37, 0xa4, 0x1e, 0x9c, 0x70, 0x5e, 0x6d, 0xed, 0x21, 0x5a,
	0xed, 0x1f, 0xaf, 0xfc, 0x27, 0x28, 0x6f, 0x80, 0x78, 0x4c, 0x9e, 0x04, 0xd9, 0x5e, 0x43, 0xa0,
	0x37, 0xcf, 0x6f, 0x46, 0x9f, 0xbf, 0xf1, 0x67, 0x20, 0x1a, 0xd5, 0xb1, 0xe1, 0xa8, 0xa4, 0x35,
	0x48, 0x47, 0x25, 0x8d, 0x24, 0xe9, 0xf1, 0x61, 0xb5, 0xd4, 0xa2, 0x35, 0xb2, 0xc5, 0x21, 0xb0,
	0xd5, 0xed, 0x41, 0xca, 0x43, 0x87, 0xf7, 0xbe, 0x7a, 0xb6, 0xdf, 0xee, 0x4d, 0xd3, 0xa3, 0x36,
	0x75, 0x3f, 0x86, 0x81, 0xcd, 0x8f, 0x04, 0x72, 0xe6, 0x44, 0x18, 0x6a, 0xdb, 0x19, 0xf2, 0x16,
	0x32, 0x85, 0xa6, 0xe2, 0x52, 0x60, 0x91, 0xac, 0x93, 0xed, 0x9c, 0xcd, 0x14, 0x9a, 0xcf, 0x52,
	0x20, 0x79, 0x0f, 0x8b, 0x11, 0x55, 0x23, 0x45, 0xe5, 0x45, 0x8a, 0x74, 0x9d, 0x6c, 0xaf, 0x59,
	0x1e, 0xd8, 0xde, 0x21, 0x37, 0xe2, 0x1d, 0x55, 0xda, 0xd4, 0xc6, 0xea, 0xe2, 0xc2, 0x2b, 0xe4,
	0x9e, 0xed, 0x3c, 0x22, 0x05, 0xcc, 0x78, 0x67, 0xb5, 0x41, 0x55, 0x5c, 0x06, 0xfd, 0xa9, 0xdc,
	0xfc, 0x4c, 0xff, 0x58, 0xe1, 0x52, 0x09, 0x72, 0x0b, 0xf9, 0xd8, 0xd9, 0x43, 0x33, 0x54, 0x43,
	0xdd, 0x47, 0x37, 0x10, 0xd0, 0x53, 0xdd, 0x23, 0xb9, 0x83, 0x99, 0xf2, 0xae, 0x9d, 0x97, 0x8b,
	0x6d, 0x5e, 0xbe, 0xa1, 0xc7, 0x07, 0x7a, 0xb6, 0x0d, 0x8b, 0x7d, 0xf2, 0x01, 0xae, 0xb5, 0xe2,
	0x5e, 0x48, 0x8f, 0x35, 0xc7, 0xc9, 0xd9, 0x42, 0x2b, 0xfe, 0x14, 0x99, 0xbb, 0xd0, 0x0d, 0x4d,
	0x4f, 0x3b, 0xd9, 0x03, 0xad, 0xf8, 0x2e, 0x10, 0xf2, 0x09, 0xe6, 0xca, 0x76, 0x58, 0x99, 0xd3,
	0x88, 0xc5, 0xeb, 0x75, 0xb2, 0x5d, 0x96, 0xc5, 0xd9, 0x95, 0xce, 0x35, 0x65, 0xb6, 0xc3, 0xfd,
	0x69, 0x44, 0x96, 0xa9, 0xe9, 0xb4, 0x29, 0x21, 0x8b, 0x94, 0xe4, 0x30, 0xfb, 0x3a, 0xb4, 0x83,
	0xfc, 0x3e, 0xdc, 0xbc, 0x22, 0x0b, 0xc8, 0x1e, 0x51, 0x1b, 0xd7, 0xbc, 0x49, 0x5c, 0x6b, 0xa7,
	0xb8, 0x2f, 0xd2, 0xcd, 0xaf, 0x04, 0xc8, 0x74, 0xed, 0xf9, 0x9b, 0x2c, 0x21, 0x6d, 0xc4, 0xf4,
	0x14, 0x69, 0x23, 0xc8, 0x1d, 0xcc, 0xb5, 0x68, 0x2b, 0x1f, 0xb9, 0x0f, 0x24, 0x2f, 0x17, 0xce,
	0xd1, 0xee, 0xf1, 0xcb, 0xde, 0x31, 0x96, 0x69, 0xd1, 0xfa, 0x13, 0x79, 0x07, 0xf3, 0xff, 0xd7,
	0xff, 0x0b, 0x5c, 0x2c, 0xff, 0xee, 0x1d, 0x4b, 0x42, 0xe1, 0xd2, 0xe5, 0xed, 0xf7, 0xcd, 0xcb,
	0x15, 0x0d, 0x3f, 0x8a, 0xc6, 0x1f, 0x45, 0xf7, 0xf1, 0x47, 0x31, 0x3f, 0x17, 0x52, 0x71, 0x66,
	0x75, 0x71, 0xf5, 0x22, 0x15, 0xc7, 0x59, 0xec, 0x3f, 0x5f, 0x79, 0x91, 0x8f, 0xbf, 0x03, 0x00,
	0x00, 0xff, 0xff, 0xf9, 0xd1, 0xc8, 0xae, 0xce, 0x02, 0x00, 0x00,
}

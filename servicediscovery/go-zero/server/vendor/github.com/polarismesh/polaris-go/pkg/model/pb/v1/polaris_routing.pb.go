// Code generated by protoc-gen-go.
// source: polaris_routing.proto
// DO NOT EDIT!

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Routing struct {
	// 规则所属服务以及命名空间
	Service   *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Namespace *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	// 每个服务可以配置多条入站或者出站规则
	// 对于每个请求，从上到下依次匹配，若命中则终止
	Inbounds     []*Route                     `protobuf:"bytes,3,rep,name=inbounds" json:"inbounds,omitempty"`
	Outbounds    []*Route                     `protobuf:"bytes,4,rep,name=outbounds" json:"outbounds,omitempty"`
	Ctime        *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=ctime" json:"ctime,omitempty"`
	Mtime        *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=mtime" json:"mtime,omitempty"`
	Revision     *google_protobuf.StringValue `protobuf:"bytes,7,opt,name=revision" json:"revision,omitempty"`
	ServiceToken *google_protobuf.StringValue `protobuf:"bytes,8,opt,name=service_token" json:"service_token,omitempty"`
}

func (m *Routing) Reset()                    { *m = Routing{} }
func (m *Routing) String() string            { return proto.CompactTextString(m) }
func (*Routing) ProtoMessage()               {}
func (*Routing) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Routing) GetService() *google_protobuf.StringValue {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *Routing) GetNamespace() *google_protobuf.StringValue {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Routing) GetInbounds() []*Route {
	if m != nil {
		return m.Inbounds
	}
	return nil
}

func (m *Routing) GetOutbounds() []*Route {
	if m != nil {
		return m.Outbounds
	}
	return nil
}

func (m *Routing) GetCtime() *google_protobuf.StringValue {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *Routing) GetMtime() *google_protobuf.StringValue {
	if m != nil {
		return m.Mtime
	}
	return nil
}

func (m *Routing) GetRevision() *google_protobuf.StringValue {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *Routing) GetServiceToken() *google_protobuf.StringValue {
	if m != nil {
		return m.ServiceToken
	}
	return nil
}

type Route struct {
	// 如果匹配Source规则，按照Destination路由
	// 多个Source之间的关系为或
	Sources      []*Source      `protobuf:"bytes,1,rep,name=sources" json:"sources,omitempty"`
	Destinations []*Destination `protobuf:"bytes,2,rep,name=destinations" json:"destinations,omitempty"`
}

func (m *Route) Reset()                    { *m = Route{} }
func (m *Route) String() string            { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()               {}
func (*Route) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *Route) GetSources() []*Source {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *Route) GetDestinations() []*Destination {
	if m != nil {
		return m.Destinations
	}
	return nil
}

type Source struct {
	// 主调方服务以及命名空间
	Service   *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Namespace *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	// 主调方服务实例标签或者请求标签
	// value支持正则匹配
	Metadata map[string]*MatchString `protobuf:"bytes,3,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Source) Reset()                    { *m = Source{} }
func (m *Source) String() string            { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()               {}
func (*Source) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *Source) GetService() *google_protobuf.StringValue {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *Source) GetNamespace() *google_protobuf.StringValue {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Source) GetMetadata() map[string]*MatchString {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Destination struct {
	// 被调方服务以及命名空间
	Service   *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Namespace *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	// 被调方服务实例标签
	// value支持正则匹配
	Metadata map[string]*MatchString `protobuf:"bytes,3,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 根据服务名和服务实例metadata筛选符合条件的服务实例子集
	// 服务实例子集可以设置优先级和权重
	// 优先级：整型，范围[0, 9]，最高优先级为0
	// 权重：整型
	// 先按优先级路由，如果存在高优先级，不会使用低优先级
	// 如果存在优先级相同的子集，再按权重分配
	// 优先级和权重可以都不设置/设置一个/设置两个
	// 如果部分设置优先级，部分没有设置，认为没有设置的优先级最低
	// 如果部分设置权重，部分没有设置，认为没有设置的权重为0
	// 如果全部没有设置权重，认为权重相同
	Priority *google_protobuf.UInt32Value `protobuf:"bytes,4,opt,name=priority" json:"priority,omitempty"`
	Weight   *google_protobuf.UInt32Value `protobuf:"bytes,5,opt,name=weight" json:"weight,omitempty"`
	// 将请求转发到代理服务
	Transfer *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=transfer" json:"transfer,omitempty"`
}

func (m *Destination) Reset()                    { *m = Destination{} }
func (m *Destination) String() string            { return proto.CompactTextString(m) }
func (*Destination) ProtoMessage()               {}
func (*Destination) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *Destination) GetService() *google_protobuf.StringValue {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *Destination) GetNamespace() *google_protobuf.StringValue {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Destination) GetMetadata() map[string]*MatchString {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Destination) GetPriority() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *Destination) GetWeight() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *Destination) GetTransfer() *google_protobuf.StringValue {
	if m != nil {
		return m.Transfer
	}
	return nil
}

func init() {
	proto.RegisterType((*Routing)(nil), "v1.Routing")
	proto.RegisterType((*Route)(nil), "v1.Route")
	proto.RegisterType((*Source)(nil), "v1.Source")
	proto.RegisterType((*Destination)(nil), "v1.Destination")
}

func init() { proto.RegisterFile("polaris_routing.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0xdf, 0x6b, 0xdb, 0x30,
	0x10, 0xc7, 0x89, 0xdd, 0xfc, 0xba, 0xac, 0x6c, 0x68, 0x0c, 0x44, 0xd8, 0x46, 0x09, 0x2b, 0xeb,
	0x93, 0x4b, 0x93, 0x32, 0xba, 0x3e, 0x8e, 0xed, 0x61, 0xb0, 0xbe, 0xb8, 0x6c, 0xaf, 0x45, 0x71,
	0xae, 0xae, 0x68, 0x2c, 0x19, 0xe9, 0xec, 0x92, 0xb7, 0xfd, 0x4f, 0xdb, 0x1f, 0x38, 0x2c, 0xd9,
	0x49, 0xd3, 0x11, 0xf0, 0x43, 0x21, 0x6f, 0xe2, 0xee, 0xf3, 0xbd, 0x3b, 0x7d, 0x75, 0x82, 0x37,
	0xb9, 0x5e, 0x0a, 0x23, 0xed, 0x8d, 0xd1, 0x05, 0x49, 0x95, 0x46, 0xb9, 0xd1, 0xa4, 0x59, 0x50,
	0x9e, 0x8d, 0xdf, 0xa7, 0x5a, 0xa7, 0x4b, 0x3c, 0x75, 0x91, 0x79, 0x71, 0x7b, 0xfa, 0x60, 0x44,
	0x9e, 0xa3, 0xb1, 0x9e, 0x19, 0xbf, 0x6e, 0xa4, 0x99, 0x5e, 0xe0, 0xd2, 0x07, 0x27, 0x7f, 0x42,
	0xe8, 0xc7, 0xbe, 0x14, 0xfb, 0x04, 0x7d, 0x8b, 0xa6, 0x94, 0x09, 0xf2, 0xce, 0x51, 0xe7, 0x64,
	0x34, 0x7d, 0x1b, 0xf9, 0x92, 0x51, 0x53, 0x32, 0xba, 0x26, 0x23, 0x55, 0xfa, 0x4b, 0x2c, 0x0b,
	0x8c, 0x1b, 0x98, 0x5d, 0xc2, 0x50, 0x89, 0x0c, 0x6d, 0x2e, 0x12, 0xe4, 0x41, 0x0b, 0xe5, 0x06,
	0x67, 0xc7, 0x30, 0x90, 0x6a, 0xae, 0x0b, 0xb5, 0xb0, 0x3c, 0x3c, 0x0a, 0x4f, 0x46, 0xd3, 0x61,
	0x54, 0x9e, 0x45, 0xd5, 0x48, 0x18, 0xaf, 0x53, 0xec, 0x23, 0x0c, 0x75, 0x41, 0x35, 0x77, 0xf0,
	0x94, 0xdb, 0xe4, 0xd8, 0x14, 0xba, 0x09, 0xc9, 0x0c, 0x79, 0xb7, 0xc5, 0x1c, 0x1e, 0xad, 0x34,
	0x99, 0xd3, 0xf4, 0xda, 0x68, 0x1c, 0xca, 0x2e, 0x60, 0x60, 0xb0, 0x94, 0x56, 0x6a, 0xc5, 0xfb,
	0x2d, 0x64, 0x6b, 0x9a, 0x7d, 0x81, 0xc3, 0xda, 0xb8, 0x1b, 0xd2, 0xf7, 0xa8, 0xf8, 0xa0, 0x85,
	0x7c, 0x5b, 0x32, 0x99, 0x43, 0xd7, 0xdd, 0x9c, 0x7d, 0x80, 0xbe, 0xd5, 0x85, 0x49, 0xd0, 0xf2,
	0x8e, 0x73, 0x05, 0x2a, 0x57, 0xae, 0x5d, 0x28, 0x6e, 0x52, 0x6c, 0x06, 0x2f, 0x16, 0x68, 0x49,
	0x2a, 0x41, 0x52, 0x2b, 0xcb, 0x03, 0x87, 0xbe, 0xac, 0xd0, 0xaf, 0x9b, 0x78, 0xbc, 0x05, 0x4d,
	0x7e, 0x07, 0xd0, 0xf3, 0x85, 0xf6, 0xb2, 0x18, 0xe7, 0x30, 0xc8, 0x90, 0xc4, 0x42, 0x90, 0xa8,
	0x17, 0x83, 0x6f, 0xae, 0x16, 0x5d, 0xd5, 0xa9, 0x6f, 0x8a, 0xcc, 0x2a, 0x5e, 0x93, 0xe3, 0x1f,
	0x70, 0xb8, 0x95, 0x62, 0xaf, 0x20, 0xbc, 0xc7, 0x95, 0x1b, 0x7b, 0x18, 0x57, 0x47, 0x76, 0x0c,
	0xdd, 0xb2, 0x6a, 0x56, 0x0f, 0xe4, 0x5c, 0xb8, 0x12, 0x94, 0xdc, 0xf9, 0x41, 0x62, 0x9f, 0xbd,
	0x0c, 0x2e, 0x3a, 0x93, 0xbf, 0x21, 0x8c, 0x1e, 0x19, 0xb4, 0x17, 0x1f, 0x3e, 0xff, 0xe7, 0xc3,
	0xbb, 0x27, 0xef, 0xb6, 0xcb, 0x8c, 0x6a, 0x47, 0x73, 0x23, 0xb5, 0x91, 0xb4, 0xe2, 0x07, 0x3b,
	0xba, 0xfe, 0xfc, 0xae, 0x68, 0x36, 0xad, 0x77, 0xb4, 0xa1, 0xd9, 0x39, 0xf4, 0x1e, 0x50, 0xa6,
	0x77, 0xb4, 0xf3, 0x1b, 0x3d, 0xd6, 0xd5, 0x6c, 0xd5, 0x8f, 0x8c, 0x50, 0xf6, 0x16, 0x4d, 0xab,
	0xaf, 0xb4, 0xa6, 0x9f, 0xf7, 0xd9, 0xe6, 0x3d, 0xd7, 0x6d, 0xf6, 0x2f, 0x00, 0x00, 0xff, 0xff,
	0x71, 0x58, 0x4b, 0xae, 0x2c, 0x05, 0x00, 0x00,
}

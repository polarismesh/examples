// Code generated by protoc-gen-go.
// source: polaris_service.proto
// DO NOT EDIT!

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AliasType int32

const (
	AliasType_DEFAULT AliasType = 0
	AliasType_CL5SID  AliasType = 1
)

var AliasType_name = map[int32]string{
	0: "DEFAULT",
	1: "CL5SID",
}
var AliasType_value = map[string]int32{
	"DEFAULT": 0,
	"CL5SID":  1,
}

func (x AliasType) String() string {
	return proto.EnumName(AliasType_name, int32(x))
}
func (AliasType) EnumDescriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

type HealthCheck_HealthCheckType int32

const (
	HealthCheck_UNKNOWN   HealthCheck_HealthCheckType = 0
	HealthCheck_HEARTBEAT HealthCheck_HealthCheckType = 1
)

var HealthCheck_HealthCheckType_name = map[int32]string{
	0: "UNKNOWN",
	1: "HEARTBEAT",
}
var HealthCheck_HealthCheckType_value = map[string]int32{
	"UNKNOWN":   0,
	"HEARTBEAT": 1,
}

func (x HealthCheck_HealthCheckType) String() string {
	return proto.EnumName(HealthCheck_HealthCheckType_name, int32(x))
}
func (HealthCheck_HealthCheckType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor7, []int{4, 0}
}

type Namespace struct {
	Name    *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Comment *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=comment" json:"comment,omitempty"`
	Owners  *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=owners" json:"owners,omitempty"`
	Token   *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
	Ctime   *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=ctime" json:"ctime,omitempty"`
	Mtime   *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=mtime" json:"mtime,omitempty"`
}

func (m *Namespace) Reset()                    { *m = Namespace{} }
func (m *Namespace) String() string            { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()               {}
func (*Namespace) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *Namespace) GetName() *google_protobuf.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Namespace) GetComment() *google_protobuf.StringValue {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Namespace) GetOwners() *google_protobuf.StringValue {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *Namespace) GetToken() *google_protobuf.StringValue {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Namespace) GetCtime() *google_protobuf.StringValue {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *Namespace) GetMtime() *google_protobuf.StringValue {
	if m != nil {
		return m.Mtime
	}
	return nil
}

type Service struct {
	Name       *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace  *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Metadata   map[string]string            `protobuf:"bytes,3,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Ports      *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=ports" json:"ports,omitempty"`
	Business   *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=business" json:"business,omitempty"`
	Department *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=department" json:"department,omitempty"`
	CmdbMod1   *google_protobuf.StringValue `protobuf:"bytes,7,opt,name=cmdb_mod1" json:"cmdb_mod1,omitempty"`
	CmdbMod2   *google_protobuf.StringValue `protobuf:"bytes,8,opt,name=cmdb_mod2" json:"cmdb_mod2,omitempty"`
	CmdbMod3   *google_protobuf.StringValue `protobuf:"bytes,9,opt,name=cmdb_mod3" json:"cmdb_mod3,omitempty"`
	Comment    *google_protobuf.StringValue `protobuf:"bytes,10,opt,name=comment" json:"comment,omitempty"`
	Owners     *google_protobuf.StringValue `protobuf:"bytes,11,opt,name=owners" json:"owners,omitempty"`
	Token      *google_protobuf.StringValue `protobuf:"bytes,12,opt,name=token" json:"token,omitempty"`
	Ctime      *google_protobuf.StringValue `protobuf:"bytes,13,opt,name=ctime" json:"ctime,omitempty"`
	Mtime      *google_protobuf.StringValue `protobuf:"bytes,14,opt,name=mtime" json:"mtime,omitempty"`
	Revision   *google_protobuf.StringValue `protobuf:"bytes,15,opt,name=revision" json:"revision,omitempty"`
}

func (m *Service) Reset()                    { *m = Service{} }
func (m *Service) String() string            { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()               {}
func (*Service) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *Service) GetName() *google_protobuf.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Service) GetNamespace() *google_protobuf.StringValue {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Service) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Service) GetPorts() *google_protobuf.StringValue {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Service) GetBusiness() *google_protobuf.StringValue {
	if m != nil {
		return m.Business
	}
	return nil
}

func (m *Service) GetDepartment() *google_protobuf.StringValue {
	if m != nil {
		return m.Department
	}
	return nil
}

func (m *Service) GetCmdbMod1() *google_protobuf.StringValue {
	if m != nil {
		return m.CmdbMod1
	}
	return nil
}

func (m *Service) GetCmdbMod2() *google_protobuf.StringValue {
	if m != nil {
		return m.CmdbMod2
	}
	return nil
}

func (m *Service) GetCmdbMod3() *google_protobuf.StringValue {
	if m != nil {
		return m.CmdbMod3
	}
	return nil
}

func (m *Service) GetComment() *google_protobuf.StringValue {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Service) GetOwners() *google_protobuf.StringValue {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *Service) GetToken() *google_protobuf.StringValue {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Service) GetCtime() *google_protobuf.StringValue {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *Service) GetMtime() *google_protobuf.StringValue {
	if m != nil {
		return m.Mtime
	}
	return nil
}

func (m *Service) GetRevision() *google_protobuf.StringValue {
	if m != nil {
		return m.Revision
	}
	return nil
}

type ServiceAlias struct {
	Service      *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Namespace    *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Alias        *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=alias" json:"alias,omitempty"`
	Type         AliasType                    `protobuf:"varint,4,opt,name=type,enum=v1.AliasType" json:"type,omitempty"`
	Owners       *google_protobuf.StringValue `protobuf:"bytes,8,opt,name=owners" json:"owners,omitempty"`
	ServiceToken *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=service_token" json:"service_token,omitempty"`
	Ctime        *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=ctime" json:"ctime,omitempty"`
	Mtime        *google_protobuf.StringValue `protobuf:"bytes,7,opt,name=mtime" json:"mtime,omitempty"`
}

func (m *ServiceAlias) Reset()                    { *m = ServiceAlias{} }
func (m *ServiceAlias) String() string            { return proto.CompactTextString(m) }
func (*ServiceAlias) ProtoMessage()               {}
func (*ServiceAlias) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *ServiceAlias) GetService() *google_protobuf.StringValue {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ServiceAlias) GetNamespace() *google_protobuf.StringValue {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *ServiceAlias) GetAlias() *google_protobuf.StringValue {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *ServiceAlias) GetType() AliasType {
	if m != nil {
		return m.Type
	}
	return AliasType_DEFAULT
}

func (m *ServiceAlias) GetOwners() *google_protobuf.StringValue {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *ServiceAlias) GetServiceToken() *google_protobuf.StringValue {
	if m != nil {
		return m.ServiceToken
	}
	return nil
}

func (m *ServiceAlias) GetCtime() *google_protobuf.StringValue {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *ServiceAlias) GetMtime() *google_protobuf.StringValue {
	if m != nil {
		return m.Mtime
	}
	return nil
}

type Instance struct {
	Id                *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Service           *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=service" json:"service,omitempty"`
	Namespace         *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	VpcId             *google_protobuf.StringValue `protobuf:"bytes,21,opt,name=vpc_id" json:"vpc_id,omitempty"`
	Host              *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=host" json:"host,omitempty"`
	Port              *google_protobuf.UInt32Value `protobuf:"bytes,5,opt,name=port" json:"port,omitempty"`
	Protocol          *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=protocol" json:"protocol,omitempty"`
	Version           *google_protobuf.StringValue `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
	Priority          *google_protobuf.UInt32Value `protobuf:"bytes,8,opt,name=priority" json:"priority,omitempty"`
	Weight            *google_protobuf.UInt32Value `protobuf:"bytes,9,opt,name=weight" json:"weight,omitempty"`
	EnableHealthCheck *google_protobuf.BoolValue   `protobuf:"bytes,20,opt,name=enable_health_check,json=enableHealthCheck" json:"enable_health_check,omitempty"`
	HealthCheck       *HealthCheck                 `protobuf:"bytes,10,opt,name=health_check,json=healthCheck" json:"health_check,omitempty"`
	Healthy           *google_protobuf.BoolValue   `protobuf:"bytes,11,opt,name=healthy" json:"healthy,omitempty"`
	Isolate           *google_protobuf.BoolValue   `protobuf:"bytes,12,opt,name=isolate" json:"isolate,omitempty"`
	Location          *Location                    `protobuf:"bytes,13,opt,name=location" json:"location,omitempty"`
	Metadata          map[string]string            `protobuf:"bytes,14,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LogicSet          *google_protobuf.StringValue `protobuf:"bytes,15,opt,name=logic_set" json:"logic_set,omitempty"`
	Ctime             *google_protobuf.StringValue `protobuf:"bytes,16,opt,name=ctime" json:"ctime,omitempty"`
	Mtime             *google_protobuf.StringValue `protobuf:"bytes,17,opt,name=mtime" json:"mtime,omitempty"`
	Revision          *google_protobuf.StringValue `protobuf:"bytes,18,opt,name=revision" json:"revision,omitempty"`
	ServiceToken      *google_protobuf.StringValue `protobuf:"bytes,19,opt,name=service_token" json:"service_token,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *Instance) GetId() *google_protobuf.StringValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Instance) GetService() *google_protobuf.StringValue {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *Instance) GetNamespace() *google_protobuf.StringValue {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Instance) GetVpcId() *google_protobuf.StringValue {
	if m != nil {
		return m.VpcId
	}
	return nil
}

func (m *Instance) GetHost() *google_protobuf.StringValue {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *Instance) GetPort() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Port
	}
	return nil
}

func (m *Instance) GetProtocol() *google_protobuf.StringValue {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *Instance) GetVersion() *google_protobuf.StringValue {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Instance) GetPriority() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *Instance) GetWeight() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *Instance) GetEnableHealthCheck() *google_protobuf.BoolValue {
	if m != nil {
		return m.EnableHealthCheck
	}
	return nil
}

func (m *Instance) GetHealthCheck() *HealthCheck {
	if m != nil {
		return m.HealthCheck
	}
	return nil
}

func (m *Instance) GetHealthy() *google_protobuf.BoolValue {
	if m != nil {
		return m.Healthy
	}
	return nil
}

func (m *Instance) GetIsolate() *google_protobuf.BoolValue {
	if m != nil {
		return m.Isolate
	}
	return nil
}

func (m *Instance) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Instance) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Instance) GetLogicSet() *google_protobuf.StringValue {
	if m != nil {
		return m.LogicSet
	}
	return nil
}

func (m *Instance) GetCtime() *google_protobuf.StringValue {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *Instance) GetMtime() *google_protobuf.StringValue {
	if m != nil {
		return m.Mtime
	}
	return nil
}

func (m *Instance) GetRevision() *google_protobuf.StringValue {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *Instance) GetServiceToken() *google_protobuf.StringValue {
	if m != nil {
		return m.ServiceToken
	}
	return nil
}

type HealthCheck struct {
	Type      HealthCheck_HealthCheckType `protobuf:"varint,1,opt,name=type,enum=v1.HealthCheck_HealthCheckType" json:"type,omitempty"`
	Heartbeat *HeartbeatHealthCheck       `protobuf:"bytes,2,opt,name=heartbeat" json:"heartbeat,omitempty"`
}

func (m *HealthCheck) Reset()                    { *m = HealthCheck{} }
func (m *HealthCheck) String() string            { return proto.CompactTextString(m) }
func (*HealthCheck) ProtoMessage()               {}
func (*HealthCheck) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *HealthCheck) GetType() HealthCheck_HealthCheckType {
	if m != nil {
		return m.Type
	}
	return HealthCheck_UNKNOWN
}

func (m *HealthCheck) GetHeartbeat() *HeartbeatHealthCheck {
	if m != nil {
		return m.Heartbeat
	}
	return nil
}

type HeartbeatHealthCheck struct {
	Ttl *google_protobuf.UInt32Value `protobuf:"bytes,1,opt,name=ttl" json:"ttl,omitempty"`
}

func (m *HeartbeatHealthCheck) Reset()                    { *m = HeartbeatHealthCheck{} }
func (m *HeartbeatHealthCheck) String() string            { return proto.CompactTextString(m) }
func (*HeartbeatHealthCheck) ProtoMessage()               {}
func (*HeartbeatHealthCheck) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *HeartbeatHealthCheck) GetTtl() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Ttl
	}
	return nil
}

func init() {
	proto.RegisterType((*Namespace)(nil), "v1.Namespace")
	proto.RegisterType((*Service)(nil), "v1.Service")
	proto.RegisterType((*ServiceAlias)(nil), "v1.ServiceAlias")
	proto.RegisterType((*Instance)(nil), "v1.Instance")
	proto.RegisterType((*HealthCheck)(nil), "v1.HealthCheck")
	proto.RegisterType((*HeartbeatHealthCheck)(nil), "v1.HeartbeatHealthCheck")
	proto.RegisterEnum("v1.AliasType", AliasType_name, AliasType_value)
	proto.RegisterEnum("v1.HealthCheck_HealthCheckType", HealthCheck_HealthCheckType_name, HealthCheck_HealthCheckType_value)
}

func init() { proto.RegisterFile("polaris_service.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 879 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdd, 0x6e, 0xe2, 0x46,
	0x18, 0x5d, 0x20, 0xfc, 0xf8, 0x03, 0x12, 0x76, 0x92, 0x95, 0x5c, 0x54, 0xb5, 0x5b, 0xd4, 0x8b,
	0xa8, 0x6a, 0xbd, 0x8d, 0xc9, 0x46, 0xab, 0xb4, 0x37, 0x64, 0x97, 0xd5, 0xa6, 0x4d, 0xa9, 0xe4,
	0x90, 0xf6, 0x12, 0x0d, 0x66, 0x0a, 0xa3, 0xd8, 0x1e, 0xcb, 0x9e, 0x10, 0xf1, 0x14, 0x7d, 0x8e,
	0x3e, 0x43, 0x1f, 0xa0, 0x4f, 0xd0, 0xf7, 0xa9, 0x66, 0xc6, 0x86, 0xc9, 0x6e, 0x89, 0x06, 0xe7,
	0x0e, 0x3c, 0xe7, 0x7c, 0x63, 0x7f, 0xdf, 0x39, 0x67, 0x06, 0x5e, 0xc4, 0x2c, 0xc0, 0x09, 0x4d,
	0x27, 0x29, 0x49, 0x96, 0xd4, 0x27, 0x4e, 0x9c, 0x30, 0xce, 0x50, 0x79, 0x79, 0xd2, 0xfd, 0x62,
	0xce, 0xd8, 0x3c, 0x20, 0xaf, 0xe4, 0x93, 0xe9, 0xdd, 0x1f, 0xaf, 0xee, 0x13, 0x1c, 0xc7, 0x24,
	0x49, 0x15, 0xa6, 0x7b, 0x98, 0x53, 0x43, 0x36, 0x23, 0x81, 0x7a, 0xd8, 0xfb, 0xa7, 0x0c, 0xd6,
	0x08, 0x87, 0x24, 0x8d, 0xb1, 0x4f, 0xd0, 0xf7, 0xb0, 0x17, 0xe1, 0x90, 0xd8, 0xa5, 0x97, 0xa5,
	0xe3, 0xa6, 0xfb, 0xb9, 0xa3, 0x2a, 0x3a, 0x79, 0x45, 0xe7, 0x9a, 0x27, 0x34, 0x9a, 0xff, 0x86,
	0x83, 0x3b, 0xe2, 0x49, 0x24, 0x3a, 0x83, 0xba, 0xcf, 0xc2, 0x90, 0x44, 0xdc, 0x2e, 0x1b, 0x90,
	0x72, 0x30, 0x3a, 0x85, 0x1a, 0xbb, 0x8f, 0x48, 0x92, 0xda, 0x15, 0x03, 0x5a, 0x86, 0x45, 0x2e,
	0x54, 0x39, 0xbb, 0x25, 0x91, 0xbd, 0x67, 0x40, 0x52, 0x50, 0xc1, 0xf1, 0x39, 0x0d, 0x89, 0x5d,
	0x35, 0xe1, 0x48, 0xa8, 0xe0, 0x84, 0x92, 0x53, 0x33, 0xe1, 0x48, 0x68, 0xef, 0xcf, 0x3a, 0xd4,
	0xaf, 0xd5, 0x50, 0x0a, 0xf4, 0xf1, 0x1c, 0xac, 0x28, 0x1f, 0x83, 0x51, 0x27, 0x37, 0x70, 0xf4,
	0x1a, 0x1a, 0x21, 0xe1, 0x78, 0x86, 0x39, 0xb6, 0x2b, 0x2f, 0x2b, 0xc7, 0x4d, 0xf7, 0x33, 0x67,
	0x79, 0xe2, 0x64, 0x2f, 0xe3, 0xfc, 0x92, 0xad, 0x0d, 0x23, 0x9e, 0xac, 0xbc, 0x35, 0x54, 0x7c,
	0x64, 0xcc, 0x12, 0x9e, 0x9a, 0x35, 0x53, 0x42, 0xd1, 0x1b, 0x68, 0x4c, 0xef, 0x52, 0x1a, 0x91,
	0x34, 0x35, 0xea, 0xe7, 0x1a, 0x8d, 0x7e, 0x04, 0x98, 0x91, 0x18, 0x27, 0x5c, 0x6a, 0xc5, 0xa4,
	0xaf, 0x1a, 0x5e, 0xb4, 0xc7, 0x0f, 0x67, 0x53, 0x21, 0xdd, 0x13, 0xbb, 0x6e, 0xd2, 0x9e, 0x35,
	0x5c, 0xe7, 0xba, 0x76, 0x63, 0x17, 0xae, 0xab, 0x73, 0xfb, 0xb6, 0xb5, 0x0b, 0xb7, 0xaf, 0x5b,
	0x03, 0x8a, 0x59, 0xa3, 0x59, 0xc4, 0x1a, 0xad, 0x02, 0xd6, 0x68, 0x17, 0xb0, 0xc6, 0xbe, 0xb1,
	0x35, 0x84, 0x6a, 0x12, 0xb2, 0xa4, 0x29, 0x65, 0x91, 0x7d, 0x60, 0xa2, 0x9a, 0x1c, 0xdd, 0xfd,
	0x01, 0xda, 0x0f, 0xe4, 0x8b, 0x3a, 0x50, 0xb9, 0x25, 0x2b, 0x69, 0x2c, 0xcb, 0x13, 0x3f, 0xd1,
	0x11, 0x54, 0x97, 0x82, 0x25, 0x5d, 0x63, 0x79, 0xea, 0xcf, 0x79, 0xf9, 0x4d, 0xa9, 0xf7, 0x77,
	0x05, 0x5a, 0x99, 0x09, 0x06, 0x01, 0xc5, 0xa9, 0x98, 0x48, 0x16, 0x9b, 0x46, 0xce, 0xcc, 0xc1,
	0x4f, 0x32, 0xa7, 0x0b, 0x55, 0x2c, 0x36, 0x37, 0xca, 0x39, 0x05, 0x45, 0x5f, 0xc1, 0x1e, 0x5f,
	0xc5, 0x44, 0x1a, 0x73, 0xdf, 0x6d, 0x0b, 0x33, 0xcb, 0x0f, 0x18, 0xaf, 0x62, 0xe2, 0xc9, 0x25,
	0x4d, 0x24, 0x8d, 0x1d, 0x44, 0x72, 0x01, 0xed, 0xec, 0x9b, 0x26, 0x4a, 0x2c, 0x26, 0x1e, 0x7e,
	0x48, 0xd9, 0x88, 0xa6, 0x56, 0x40, 0x34, 0x75, 0xf3, 0x3c, 0xfd, 0xd7, 0x82, 0xc6, 0x65, 0x94,
	0x72, 0x1c, 0xf9, 0x04, 0x7d, 0x0b, 0x65, 0x3a, 0x33, 0x1a, 0x5a, 0x99, 0xce, 0xf4, 0x39, 0x97,
	0x0b, 0xcf, 0xb9, 0xb2, 0xdb, 0x9c, 0x4f, 0xa1, 0xb6, 0x8c, 0xfd, 0x09, 0x9d, 0xd9, 0x2f, 0x4c,
	0x06, 0xa2, 0xb0, 0xe2, 0xa0, 0x58, 0xb0, 0x94, 0x1b, 0x45, 0xb0, 0x44, 0x0a, 0x86, 0x88, 0xe2,
	0xad, 0x93, 0xbb, 0xb9, 0x8c, 0x78, 0xdf, 0xcd, 0x18, 0x02, 0x29, 0xdc, 0x27, 0x57, 0x7d, 0x16,
	0x18, 0xcd, 0x6c, 0x8d, 0x16, 0x7d, 0x5c, 0x92, 0x44, 0xda, 0xd6, 0x64, 0x70, 0x39, 0x58, 0xed,
	0x48, 0x59, 0x42, 0xf9, 0x6a, 0xab, 0x3c, 0xf5, 0xf7, 0x5c, 0xa3, 0x45, 0x17, 0xef, 0x09, 0x9d,
	0x2f, 0xf8, 0xd6, 0xb0, 0xd5, 0x79, 0x19, 0x16, 0xfd, 0x04, 0x87, 0x24, 0xc2, 0xd3, 0x80, 0x4c,
	0x16, 0x04, 0x07, 0x7c, 0x31, 0xf1, 0x17, 0xc4, 0xbf, 0xb5, 0x8f, 0x64, 0x89, 0xee, 0x27, 0x25,
	0x2e, 0x18, 0x0b, 0x54, 0x81, 0xe7, 0x8a, 0xf6, 0x41, 0xb2, 0xde, 0x0a, 0x12, 0x72, 0xa1, 0xf5,
	0xa0, 0x88, 0x8a, 0xee, 0x03, 0xe1, 0x41, 0x0d, 0xe6, 0x35, 0x17, 0x1a, 0xe7, 0x14, 0xea, 0xea,
	0xef, 0x2a, 0x8b, 0xec, 0xc7, 0xf6, 0xcc, 0xa1, 0x82, 0x45, 0x53, 0x16, 0x60, 0x4e, 0xb2, 0xcc,
	0x7e, 0x94, 0x95, 0x41, 0xd1, 0x31, 0x34, 0x02, 0xe6, 0x63, 0x2e, 0x86, 0xa2, 0x62, 0xbb, 0x25,
	0xde, 0xed, 0x2a, 0x7b, 0xe6, 0xad, 0x57, 0xd1, 0x99, 0x76, 0x2d, 0xd8, 0x97, 0xd7, 0x82, 0xae,
	0x40, 0xe6, 0x9e, 0xda, 0x7a, 0x2f, 0x38, 0x07, 0x2b, 0x60, 0x73, 0xea, 0x4f, 0x52, 0xc2, 0x8d,
	0xe2, 0x7a, 0x03, 0xdf, 0x84, 0x43, 0xa7, 0x40, 0x38, 0x3c, 0x2f, 0x76, 0xa2, 0xa0, 0x5d, 0x4e,
	0x94, 0x4f, 0x23, 0xf0, 0x70, 0xe7, 0x08, 0x7c, 0xda, 0xa9, 0xf4, 0x57, 0x09, 0x9a, 0xba, 0xe0,
	0xfa, 0x59, 0xd8, 0x97, 0x64, 0xd8, 0x7f, 0xf9, 0x91, 0xd0, 0xf4, 0xdf, 0x5a, 0xfc, 0x9f, 0x81,
	0xb5, 0x20, 0x38, 0xe1, 0x53, 0x82, 0xf3, 0x8b, 0xb7, 0x9d, 0x31, 0xd5, 0x43, 0x5d, 0xab, 0x1b,
	0x68, 0xef, 0x3b, 0x38, 0xf8, 0xa8, 0x20, 0x6a, 0x42, 0xfd, 0x66, 0xf4, 0xf3, 0xe8, 0xd7, 0xdf,
	0x47, 0x9d, 0x67, 0xa8, 0x0d, 0xd6, 0x87, 0xe1, 0xc0, 0x1b, 0x5f, 0x0c, 0x07, 0xe3, 0x4e, 0xa9,
	0xf7, 0x1e, 0x8e, 0xfe, 0xaf, 0x22, 0x72, 0xa0, 0xc2, 0x79, 0xb0, 0x35, 0x8f, 0x75, 0x8f, 0x0a,
	0xe0, 0x37, 0x5f, 0x83, 0xb5, 0x3e, 0xc0, 0xc4, 0x86, 0xef, 0x86, 0xef, 0x07, 0x37, 0x57, 0xe3,
	0xce, 0x33, 0x04, 0x50, 0x7b, 0x7b, 0xf5, 0xfa, 0xfa, 0xf2, 0x5d, 0xa7, 0x34, 0xad, 0xc9, 0x02,
	0xfd, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x83, 0x6b, 0xf9, 0x24, 0xe4, 0x0c, 0x00, 0x00,
}

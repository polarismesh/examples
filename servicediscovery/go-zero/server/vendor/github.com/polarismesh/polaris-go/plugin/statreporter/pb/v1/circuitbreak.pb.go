// Code generated by protoc-gen-go. DO NOT EDIT.
// source: circuitbreak.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//熔断状态变更类型
type StatusChange int32

const (
	StatusChange_Unknown         StatusChange = 0
	StatusChange_CloseToOpen     StatusChange = 1
	StatusChange_OpenToHalfOpen  StatusChange = 2
	StatusChange_HalfOpenToOpen  StatusChange = 3
	StatusChange_HalfOpenToClose StatusChange = 4
)

var StatusChange_name = map[int32]string{
	0: "Unknown",
	1: "CloseToOpen",
	2: "OpenToHalfOpen",
	3: "HalfOpenToOpen",
	4: "HalfOpenToClose",
}

var StatusChange_value = map[string]int32{
	"Unknown":         0,
	"CloseToOpen":     1,
	"OpenToHalfOpen":  2,
	"HalfOpenToOpen":  3,
	"HalfOpenToClose": 4,
}

func (x StatusChange) String() string {
	return proto.EnumName(StatusChange_name, int32(x))
}

func (StatusChange) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_16bbd946efcd886f, []int{0}
}

type RecoverAllStatus int32

const (
	RecoverAllStatus_Invalid RecoverAllStatus = 0
	//发生了全死全活
	RecoverAllStatus_Start RecoverAllStatus = 1
	//全死全活结束（由于服务实例状态的改变）
	RecoverAllStatus_End RecoverAllStatus = 2
)

var RecoverAllStatus_name = map[int32]string{
	0: "Invalid",
	1: "Start",
	2: "End",
}

var RecoverAllStatus_value = map[string]int32{
	"Invalid": 0,
	"Start":   1,
	"End":     2,
}

func (x RecoverAllStatus) String() string {
	return proto.EnumName(RecoverAllStatus_name, int32(x))
}

func (RecoverAllStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_16bbd946efcd886f, []int{1}
}

//实例的一次熔断状态改变
type CircuitbreakChange struct {
	//变更时间
	Time *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	//变更的次序
	ChangeSeq uint32 `protobuf:"varint,2,opt,name=change_seq,json=changeSeq,proto3" json:"change_seq,omitempty"`
	//状态变更类型
	Change StatusChange `protobuf:"varint,3,opt,name=change,proto3,enum=v1.StatusChange" json:"change,omitempty"`
	//状态变更原因
	Reason               string   `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CircuitbreakChange) Reset()         { *m = CircuitbreakChange{} }
func (m *CircuitbreakChange) String() string { return proto.CompactTextString(m) }
func (*CircuitbreakChange) ProtoMessage()    {}
func (*CircuitbreakChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_16bbd946efcd886f, []int{0}
}

func (m *CircuitbreakChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CircuitbreakChange.Unmarshal(m, b)
}
func (m *CircuitbreakChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CircuitbreakChange.Marshal(b, m, deterministic)
}
func (m *CircuitbreakChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CircuitbreakChange.Merge(m, src)
}
func (m *CircuitbreakChange) XXX_Size() int {
	return xxx_messageInfo_CircuitbreakChange.Size(m)
}
func (m *CircuitbreakChange) XXX_DiscardUnknown() {
	xxx_messageInfo_CircuitbreakChange.DiscardUnknown(m)
}

var xxx_messageInfo_CircuitbreakChange proto.InternalMessageInfo

func (m *CircuitbreakChange) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *CircuitbreakChange) GetChangeSeq() uint32 {
	if m != nil {
		return m.ChangeSeq
	}
	return 0
}

func (m *CircuitbreakChange) GetChange() StatusChange {
	if m != nil {
		return m.Change
	}
	return StatusChange_Unknown
}

func (m *CircuitbreakChange) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

//实例的周期熔断变更历史
type CircuitbreakHistory struct {
	Ip                   string                `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 uint32                `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	VpcId                string                `protobuf:"bytes,3,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	Changes              []*CircuitbreakChange `protobuf:"bytes,4,rep,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CircuitbreakHistory) Reset()         { *m = CircuitbreakHistory{} }
func (m *CircuitbreakHistory) String() string { return proto.CompactTextString(m) }
func (*CircuitbreakHistory) ProtoMessage()    {}
func (*CircuitbreakHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_16bbd946efcd886f, []int{1}
}

func (m *CircuitbreakHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CircuitbreakHistory.Unmarshal(m, b)
}
func (m *CircuitbreakHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CircuitbreakHistory.Marshal(b, m, deterministic)
}
func (m *CircuitbreakHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CircuitbreakHistory.Merge(m, src)
}
func (m *CircuitbreakHistory) XXX_Size() int {
	return xxx_messageInfo_CircuitbreakHistory.Size(m)
}
func (m *CircuitbreakHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_CircuitbreakHistory.DiscardUnknown(m)
}

var xxx_messageInfo_CircuitbreakHistory proto.InternalMessageInfo

func (m *CircuitbreakHistory) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *CircuitbreakHistory) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *CircuitbreakHistory) GetVpcId() string {
	if m != nil {
		return m.VpcId
	}
	return ""
}

func (m *CircuitbreakHistory) GetChanges() []*CircuitbreakChange {
	if m != nil {
		return m.Changes
	}
	return nil
}

//全死全活状态
type RecoverAllChange struct {
	//发生全死全活时间
	Time *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	//发生全死全活的实例集合的信息，如共同metadata、共同位置等
	InstanceInfo string `protobuf:"bytes,2,opt,name=instance_info,json=instanceInfo,proto3" json:"instance_info,omitempty"`
	//全死全活是发生了还是结束了
	Change RecoverAllStatus `protobuf:"varint,3,opt,name=change,proto3,enum=v1.RecoverAllStatus" json:"change,omitempty"`
	//发生全死全活原因是什么
	Reason               string   `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecoverAllChange) Reset()         { *m = RecoverAllChange{} }
func (m *RecoverAllChange) String() string { return proto.CompactTextString(m) }
func (*RecoverAllChange) ProtoMessage()    {}
func (*RecoverAllChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_16bbd946efcd886f, []int{2}
}

func (m *RecoverAllChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecoverAllChange.Unmarshal(m, b)
}
func (m *RecoverAllChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecoverAllChange.Marshal(b, m, deterministic)
}
func (m *RecoverAllChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecoverAllChange.Merge(m, src)
}
func (m *RecoverAllChange) XXX_Size() int {
	return xxx_messageInfo_RecoverAllChange.Size(m)
}
func (m *RecoverAllChange) XXX_DiscardUnknown() {
	xxx_messageInfo_RecoverAllChange.DiscardUnknown(m)
}

var xxx_messageInfo_RecoverAllChange proto.InternalMessageInfo

func (m *RecoverAllChange) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *RecoverAllChange) GetInstanceInfo() string {
	if m != nil {
		return m.InstanceInfo
	}
	return ""
}

func (m *RecoverAllChange) GetChange() RecoverAllStatus {
	if m != nil {
		return m.Change
	}
	return RecoverAllStatus_Invalid
}

func (m *RecoverAllChange) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

//一个服务一个周期的熔断变化情况
type ServiceCircuitbreak struct {
	//该条记录的唯一id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//sdk标识
	SdkToken  *SDKToken `protobuf:"bytes,2,opt,name=sdk_token,json=sdkToken,proto3" json:"sdk_token,omitempty"`
	Namespace string    `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Service   string    `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	//发生全死全活的情况
	RecoverAll []*RecoverAllChange `protobuf:"bytes,5,rep,name=recover_all,json=recoverAll,proto3" json:"recover_all,omitempty"`
	//实例熔断情况
	InstanceCircuitbreak []*CircuitbreakHistory `protobuf:"bytes,6,rep,name=instance_circuitbreak,json=instanceCircuitbreak,proto3" json:"instance_circuitbreak,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ServiceCircuitbreak) Reset()         { *m = ServiceCircuitbreak{} }
func (m *ServiceCircuitbreak) String() string { return proto.CompactTextString(m) }
func (*ServiceCircuitbreak) ProtoMessage()    {}
func (*ServiceCircuitbreak) Descriptor() ([]byte, []int) {
	return fileDescriptor_16bbd946efcd886f, []int{3}
}

func (m *ServiceCircuitbreak) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceCircuitbreak.Unmarshal(m, b)
}
func (m *ServiceCircuitbreak) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceCircuitbreak.Marshal(b, m, deterministic)
}
func (m *ServiceCircuitbreak) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceCircuitbreak.Merge(m, src)
}
func (m *ServiceCircuitbreak) XXX_Size() int {
	return xxx_messageInfo_ServiceCircuitbreak.Size(m)
}
func (m *ServiceCircuitbreak) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceCircuitbreak.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceCircuitbreak proto.InternalMessageInfo

func (m *ServiceCircuitbreak) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServiceCircuitbreak) GetSdkToken() *SDKToken {
	if m != nil {
		return m.SdkToken
	}
	return nil
}

func (m *ServiceCircuitbreak) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ServiceCircuitbreak) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ServiceCircuitbreak) GetRecoverAll() []*RecoverAllChange {
	if m != nil {
		return m.RecoverAll
	}
	return nil
}

func (m *ServiceCircuitbreak) GetInstanceCircuitbreak() []*CircuitbreakHistory {
	if m != nil {
		return m.InstanceCircuitbreak
	}
	return nil
}

func init() {
	proto.RegisterEnum("v1.StatusChange", StatusChange_name, StatusChange_value)
	proto.RegisterEnum("v1.RecoverAllStatus", RecoverAllStatus_name, RecoverAllStatus_value)
	proto.RegisterType((*CircuitbreakChange)(nil), "v1.CircuitbreakChange")
	proto.RegisterType((*CircuitbreakHistory)(nil), "v1.CircuitbreakHistory")
	proto.RegisterType((*RecoverAllChange)(nil), "v1.RecoverAllChange")
	proto.RegisterType((*ServiceCircuitbreak)(nil), "v1.ServiceCircuitbreak")
}

func init() { proto.RegisterFile("circuitbreak.proto", fileDescriptor_16bbd946efcd886f) }

var fileDescriptor_16bbd946efcd886f = []byte{
	// 524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x9d, 0x2f, 0x3c, 0x4e, 0x53, 0x6b, 0xd2, 0x16, 0x2b, 0x02, 0x11, 0x85, 0x8b, 0xa9,
	0x90, 0x4b, 0x53, 0xf1, 0x03, 0x50, 0x40, 0x6a, 0x04, 0x12, 0x92, 0x13, 0xce, 0xd1, 0xc6, 0xde,
	0x84, 0x95, 0x9d, 0x5d, 0xd7, 0xbb, 0x31, 0xe2, 0xca, 0x9d, 0x9f, 0xc1, 0x91, 0xff, 0x88, 0xbc,
	0xb6, 0x13, 0x2b, 0x1c, 0x90, 0xb8, 0xcd, 0xbc, 0x9d, 0x9d, 0xf7, 0xf6, 0xed, 0x03, 0x0c, 0x59,
	0x16, 0xee, 0x99, 0x5a, 0x67, 0x94, 0xc4, 0x7e, 0x9a, 0x09, 0x25, 0xd0, 0xcc, 0xef, 0x46, 0x03,
	0x19, 0xc5, 0x4a, 0xc4, 0x94, 0x97, 0xd8, 0xe8, 0xc5, 0x56, 0x88, 0x6d, 0x42, 0x6f, 0x75, 0xb7,
	0xde, 0x6f, 0x6e, 0x15, 0xdb, 0x51, 0xa9, 0xc8, 0x2e, 0x2d, 0x07, 0x26, 0xbf, 0x0c, 0xc0, 0x59,
	0x63, 0xd7, 0xec, 0x2b, 0xe1, 0x5b, 0x8a, 0x3e, 0xb4, 0x8b, 0x49, 0xd7, 0x18, 0x1b, 0x9e, 0x3d,
	0x1d, 0xf9, 0xe5, 0x1a, 0xbf, 0x5e, 0xe3, 0x2f, 0xeb, 0x35, 0x81, 0x9e, 0xc3, 0xe7, 0x00, 0xa1,
	0xbe, 0xb9, 0x92, 0xf4, 0xd1, 0x35, 0xc7, 0x86, 0x77, 0x1e, 0x58, 0x25, 0xb2, 0xa0, 0x8f, 0xe8,
	0x41, 0xb7, 0x6c, 0xdc, 0xd6, 0xd8, 0xf0, 0x06, 0x53, 0xc7, 0xcf, 0xef, 0xfc, 0x85, 0x22, 0x6a,
	0x2f, 0x4b, 0xc2, 0xa0, 0x3a, 0xc7, 0x6b, 0xe8, 0x66, 0x94, 0x48, 0xc1, 0xdd, 0xf6, 0xd8, 0xf0,
	0xac, 0xa0, 0xea, 0x26, 0x3f, 0x0c, 0x18, 0x36, 0x75, 0x3e, 0x30, 0xa9, 0x44, 0xf6, 0x1d, 0x07,
	0x60, 0xb2, 0x54, 0xcb, 0xb4, 0x02, 0x93, 0xa5, 0x88, 0xd0, 0x4e, 0x45, 0xa6, 0x2a, 0x09, 0xba,
	0xc6, 0x2b, 0xe8, 0xe6, 0x69, 0xb8, 0x62, 0x91, 0x66, 0xb7, 0x82, 0x4e, 0x9e, 0x86, 0xf3, 0x08,
	0xdf, 0x40, 0xaf, 0x24, 0x95, 0x6e, 0x7b, 0xdc, 0xf2, 0xec, 0xe9, 0x75, 0xa1, 0xea, 0x6f, 0x33,
	0x82, 0x7a, 0x6c, 0xf2, 0xdb, 0x00, 0x27, 0xa0, 0xa1, 0xc8, 0x69, 0xf6, 0x2e, 0x49, 0xfe, 0xd3,
	0xaa, 0x97, 0x70, 0xce, 0xb8, 0x54, 0x84, 0x87, 0x74, 0xc5, 0xf8, 0x46, 0x68, 0xa9, 0x56, 0xd0,
	0xaf, 0xc1, 0x39, 0xdf, 0x08, 0x7c, 0x7d, 0x62, 0xd8, 0x65, 0x21, 0xed, 0x48, 0x5d, 0x5a, 0xf7,
	0x4f, 0xd3, 0x7e, 0x9a, 0x30, 0x5c, 0xd0, 0x2c, 0x67, 0x21, 0x6d, 0x3e, 0x4b, 0x9b, 0x16, 0x1d,
	0x4c, 0x8b, 0xf0, 0x15, 0x58, 0x32, 0x8a, 0x57, 0x3a, 0x38, 0x5a, 0x8e, 0x3d, 0xed, 0xeb, 0x1f,
	0x7a, 0xff, 0x71, 0x59, 0x60, 0xc1, 0x13, 0x19, 0xc5, 0xba, 0xc2, 0x67, 0x60, 0x71, 0xb2, 0xa3,
	0x32, 0x25, 0x21, 0xad, 0xec, 0x3c, 0x02, 0xe8, 0x42, 0x4f, 0x96, 0x7c, 0x95, 0x92, 0xba, 0xc5,
	0xb7, 0x60, 0x67, 0xa5, 0xfc, 0x15, 0x49, 0x12, 0xb7, 0xa3, 0x0d, 0x3f, 0x79, 0x55, 0x65, 0x37,
	0x64, 0x07, 0x04, 0x3f, 0xc1, 0xd5, 0xc1, 0xac, 0x66, 0xe4, 0xdd, 0xae, 0x5e, 0xf0, 0xf4, 0xf4,
	0xc7, 0xaa, 0x58, 0x04, 0x97, 0xf5, 0xad, 0xe6, 0xe1, 0x0d, 0x83, 0x7e, 0x33, 0x74, 0x68, 0x43,
	0xef, 0x0b, 0x8f, 0xb9, 0xf8, 0xc6, 0x9d, 0x33, 0xbc, 0x00, 0x7b, 0x96, 0x08, 0x49, 0x97, 0xe2,
	0x73, 0x4a, 0xb9, 0x63, 0x20, 0xc2, 0xa0, 0xa8, 0x96, 0xe2, 0x81, 0x24, 0x1b, 0x8d, 0x99, 0x05,
	0x56, 0x77, 0xd5, 0x5c, 0x0b, 0x87, 0x70, 0x71, 0xc4, 0xf4, 0x0a, 0xa7, 0x7d, 0x73, 0xdf, 0x4c,
	0x4a, 0x49, 0x5a, 0xd0, 0xcd, 0x79, 0x4e, 0x12, 0x16, 0x39, 0x67, 0x68, 0x41, 0x67, 0xa1, 0x48,
	0xa6, 0x1c, 0x03, 0x7b, 0xd0, 0xfa, 0xc0, 0x23, 0xc7, 0x5c, 0x77, 0x75, 0x68, 0xee, 0xff, 0x04,
	0x00, 0x00, 0xff, 0xff, 0xbe, 0xd6, 0xc9, 0xc8, 0xde, 0x03, 0x00, 0x00,
}
